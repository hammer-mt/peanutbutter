# Commented out values are what the application sets as a default. You don't
# need to set them unless you plan to override their default values.

COMPOSE_PROJECT_NAME=peanutbutter

# Which Celery backend server should you connect to?
#CELERY_BROKER_URL=redis://redis:6379/0

# In development, having bytecode laying around can cause all sorts of weird
# issues with Docker. These are *.pyc file and the __pycache__/ folder.
PYTHONDONTWRITEBYTECODE=true

# Which environment is running? This should be "development" or "production".
FLASK_ENV=development

# Configure how we load our application.
FLASK_APP=peanutbutter.app:create_app()

# You should generate a random string of 64+ characters for this value in prod.
SECRET_KEY=insecure_key_for_dev

# With Docker for Windows / Mac / Linux then this default value should work.
# If you have Docker running in a VM, put the VM's IP address here instead.
#SERVER_NAME=localhost:8000

# Do you want code reloading to work with your app server? Don't do this in
# production (it's turned off by default, so don't worry about it).
WEB_RELOAD=true

# Which address and port should gunicorn bind to?
#WEB_BIND=0.0.0.0:8000

# How many workers and threads should your app use?
WEB_CONCURRENCY=1
#PYTHON_MAX_THREADS=1

# Should Docker restart your containers if they go down?
DOCKER_RESTART_POLICY=no

# What healthcheck test command do you want to run? In development, having it
# curl your web server will result in a lot of log spam, so setting it to
# /bin/true is an easy way to make the healthcheck do basically nothing.
DOCKER_HEALTHCHECK_TEST=/bin/true

# How long should Docker wait before it SIGKILLs your process?
#DOCKER_STOP_GRACE_PERIOD=3s

# What port should be published back to the Docker host for your app server?
DOCKER_WEB_PORT=8000

# What volume path should be used?
DOCKER_WEB_VOLUME=.:/app

